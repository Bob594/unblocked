// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model GameRequest {
  id          String   @id @default(cuid())
  messageId   String   @unique
  createdAt   DateTime @default(now())
  name        String
  description String   @db.Text
  owner       User     @relation("owner", fields: [ownerId], references: [id])
  ownerId     String
  status      Int      @default(0)
}

model User {
  id          String        @id
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  tokens      Token[]
  profile     Profile       @relation(fields: [id], references: [id])
  plays       Play[]
  requests    GameRequest[] @relation("owner")
  numRequests Int           @default(0)
  linkLimit   Int           @default(3)
  settings    String        @db.Text
  permissions String        @db.Text
}

model Token {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  encToken  String   @db.Text
}

model Profile {
  id           String   @id
  username     String   @unique
  displayName  String   @db.Text
  avatar       String   @db.Text
  playTokens   Int      @default(1)
  lastToken    DateTime @default(now())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  favorites    Game[]   @relation("favorited")
  likes        Game[]   @relation("likes")
  dislikes     Game[]   @relation("dislikes")
  numPlays     Int      @default(0)
  user         User?
  private      Boolean  @default(false)
}

model Publisher {
  id          String   @id @default(cuid())
  name        String
  description String   @db.Text
  games       Game[]
  numGames    Int      @default(0)
}

model Game {
  id           String    @id @default(cuid())
  slug         String    @unique
  title        String
  author       String    @db.Text
  publisherId  String?
  publisher    Publisher? @relation(fields: [publisherId], references: [id])
  description  String    @db.Text
  tags         Tag[]
  type         String
  plays        Play[]
  numPlays     Int       @default(0)
  likes        Profile[] @relation("likes")
  numLikes     Int       @default(0)
  dislikes     Profile[] @relation("dislikes")
  numDislikes  Int       @default(0)
  favorited    Profile[] @relation("favorited")
  numFavorited Int       @default(0)
  emulator     String?
}

model Tag {
  id       String @id @default(cuid())
  slug     String @unique
  name     String
  games    Game[]
  numGames Int    @default(0)
}

model Play {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  game      Game     @relation(fields: [gameId], references: [id])
  gameId    String
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}
